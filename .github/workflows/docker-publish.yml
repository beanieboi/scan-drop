name: Build and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-binaries:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Build cross-platform binaries
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o scan-drop-linux-amd64 ./cmd/scan-drop
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o scan-drop-linux-arm64 ./cmd/scan-drop
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o scan-drop-darwin-amd64 ./cmd/scan-drop
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o scan-drop-darwin-arm64 ./cmd/scan-drop
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o scan-drop-windows-amd64.exe ./cmd/scan-drop
        
        # Windows ARM64
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o scan-drop-windows-arm64.exe ./cmd/scan-drop

    - name: Create checksums
      run: |
        sha256sum scan-drop-* > checksums.txt

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          scan-drop-linux-amd64
          scan-drop-linux-arm64
          scan-drop-darwin-amd64
          scan-drop-darwin-arm64
          scan-drop-windows-amd64.exe
          scan-drop-windows-arm64.exe
          checksums.txt

  build-and-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
